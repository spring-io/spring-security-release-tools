name: Deploy Artifacts
permissions: read-all
on:
  workflow_call:
    inputs:
      should-deploy-artifacts:
        description: Whether artifacts should be deployed (true|false|central|artifactory).
        required: true
        type: string
      default-publish-milestones-central:
        description: Whether the default for milestones & RCs should be deployed to Central
        required: false
        default: false
        type: boolean
    outputs:
      artifacts-deployed:
        description: Whether artifacts were actually deployed.
        value: ${{ jobs.deploy-artifacts.outputs.artifacts-deployed }}
      project-version:
        description: The project version extracted from the current branch/tag.
        value: ${{ jobs.deploy-artifacts.outputs.project-version }}
    secrets:
      DEVELOCITY_ACCESS_KEY:
        required: false
      ARTIFACTORY_USERNAME:
        required: false
      ARTIFACTORY_PASSWORD:
        required: false
      CENTRAL_TOKEN_USERNAME:
        required: false
      CENTRAL_TOKEN_PASSWORD:
        required: false
      GPG_PRIVATE_KEY:
        required: false
      GPG_PASSPHRASE:
        required: false

env:
  DEVELOCITY_ACCESS_KEY: ${{ secrets.DEVELOCITY_ACCESS_KEY }}
  ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
  ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}

jobs:
  deploy-artifacts:
    name: Deploy Artifacts
    if: ${{ inputs.should-deploy-artifacts != 'false' }}
    runs-on: ubuntu-latest
    outputs:
      artifacts-deployed: ${{ steps.artifacts-deployed.outputs.result }}
      project-version: ${{ steps.project-version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: spring-io/spring-gradle-build-action@v2
      - id: project-version
        name: Extract Project Version
        run: echo "version=$(cat gradle.properties | grep 'version=' | awk -F'=' '{print $2}')" >> $GITHUB_OUTPUT
      - id: branch-name
        name: Extract Branch Name
        env:
          BRANCH: ${{ github.ref_name }}
          VERSION: ${{ steps.project-version.outputs.version }}
        run: |
          branch=$BRANCH
          if [[ "$branch" = "main" ]] ; then
            branch="${VERSION%.*}.x"
          fi
          echo "branch=$branch" >> $GITHUB_OUTPUT
      - id: deploy-location
        name: Default the Deploy Location
        env:
          SHOULD_DEPLOY_ARTIFACTS: ${{ inputs.should-deploy-artifacts }}
          VERSION: ${{ steps.project-version.outputs.version }}
          DEFAULT_PUBLISH_MILESTONE_CENTRAL: ${{ inputs.default-publish-milestones-central }}
        run: |
          deploy_location="$SHOULD_DEPLOY_ARTIFACTS"
          if [[ "$deploy_location" = "true" ]] ; then
            if [[ "$VERSION" =~ "-SNAPSHOT" ]] ; then
              # always default -SNAPSHOT to artifactory
              deploy_location=artifactory
            elif [[ "$DEFAULT_PUBLISH_MILESTONE_CENTRAL" = "true" ]] ; then
              # if configured, non -SNAPSHOT go to central
              deploy_location=central
            elif [[ "$VERSION" =~ "-" ]] ; then
              # -M\d+, and -RC\d+ all go to artifactory by default to remain passive
              # Newer generations will only deploy -SNAPSHOT to artifactory, but they must specify default-publish-milestone-central=true
              deploy_location=artifactory
            else
              deploy_location=central
            fi
          fi
          echo "deploy_location=$deploy_location" >> $GITHUB_OUTPUT
      - name: Deploy to Artifactory
        if: ${{ steps.deploy-location.outputs.deploy_location == 'artifactory' }}
        env:
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_PRIVATE_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_PASSPHRASE }}
          ARTIFACTORY_BUILD_NAME: ${{ github.event.repository.name }}-${{ steps.branch-name.outputs.branch }}
          ARTIFACTORY_BUILD_NUMBER: ${{ github.run_id }}
          ARTIFACTORY_BUILD_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          ARTIFACTORY_USER_AGENT_NAME: GitHub Actions
          ARTIFACTORY_USER_AGENT_VERSION: Unknown
          ARTIFACTORY_VCS_REVISION: ${{ github.sha }}
        run: ./gradlew artifactoryPublish -PartifactoryUsername="$ARTIFACTORY_USERNAME" -PartifactoryPassword="$ARTIFACTORY_PASSWORD" --stacktrace
      - name: Stage Local Artifacts for Publishing to Central
        if: ${{ steps.deploy-location.outputs.deploy_location == 'central' }}
        env:
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_PRIVATE_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          ./gradlew publishAllPublicationsToLocalRepository --stacktrace
          # rm checksums to work around https://github.com/spring-io/central-publish-action/issues/11
          find -name "*.md5" | xargs rm -f
          find -name "*.sha*" | xargs rm -f
      - name: Publish Staged Artifacts to Central
        if: ${{ steps.deploy-location.outputs.deploy_location == 'central' }}
        uses: spring-io/central-publish-action@0cdd90d12e6876341e82860d951e1bcddc1e51b6 # v0.2.0
        with:
          token-name: ${{ secrets.CENTRAL_TOKEN_USERNAME }}
          token: ${{ secrets.CENTRAL_TOKEN_PASSWORD }}
          dir: build/publications/repos
      - id: artifacts-deployed
        name: Artifacts Deployed
        run: echo "result=true" >> $GITHUB_OUTPUT
